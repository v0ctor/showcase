kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: {package}
  labels:
    app: {package}

spec:
  replicas: 2
  revisionHistoryLimit: 2

  selector:
    matchLabels:
      app: {package}

  strategy:
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

  template:
    metadata:
      labels:
        app: {package}

    spec:
      initContainers:
        - name: init
          image: {image}
          command: ['sh', '-c', 'cp -rp /app/public/* /public/']
          volumeMounts:
            - name: public
              mountPath: /public

      containers:
        - name: app
          image: {image}
          envFrom:
            - configMapRef:
                name: {package}-app
            - secretRef:
                name: {package}
          volumeMounts:
            - name: sock-app
              mountPath: /run/php
          lifecycle:
            postStart:
              exec:
                command: ['./artisan', 'config:cache']
          livenessProbe:
            exec:
              command: ['./artisan', '--version']
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 2

        - name: web
          image: nginx:alpine
          imagePullPolicy: Always
          volumeMounts:
            - name: public
              mountPath: /app/public
            - name: sock-app
              mountPath: /run/php
            - name: web-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: web-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
          ports:
            - name: http
              containerPort: 80
          lifecycle:
            preStop:
              exec:
                command: ['nginx', '-s', 'quit']
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 2

      volumes:
        - name: public
        - name: sock-app
        - name: web-config
          configMap:
            name: {package}-web

      imagePullSecrets:
        - name: {vendor}-docker-registry
