kind: Deployment
apiVersion: apps/v1

metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
  annotations:
    kubernetes.io/change-cause: '{{ .Values.images.app.tag }}'

spec:
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}

  strategy:
    rollingUpdate:
      maxUnavailable: 1

  selector:
    matchLabels:
      app: {{ .Release.Name }}

  template:
    metadata:
      labels:
        app: {{ .Release.Name }}

    spec:
      initContainers:
        - name: init
          image: {{ template "image" . }}
          command: ['sh', '-c', 'cp -rp /app/public/* /public/']
          volumeMounts:
            - name: public
              mountPath: /public

      containers:
        - name: app
          image: {{ template "image" . }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-app
            - secretRef:
                name: {{ .Release.Name }}
          volumeMounts:
            - name: sock-app
              mountPath: /run/php
          lifecycle:
            postStart:
              exec:
                command: ['./artisan', 'config:cache']
          resources: {{ toYaml .Values.deployment.resources.app | nindent 12 }}
          readinessProbe:
            exec:
              command: ['./artisan', '--version']
            initialDelaySeconds: 10
          livenessProbe:
            exec:
              command: ['./artisan', '--version']
            initialDelaySeconds: 10

        - name: web
          image: {{ .Values.images.web.name }}:{{ .Values.images.web.tag }}
          imagePullPolicy: Always
          volumeMounts:
            - name: public
              mountPath: /app/public
            - name: sock-app
              mountPath: /run/php
            - name: web-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: web-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
          ports:
            - name: http
              containerPort: 3000
            - name: h2c
              containerPort: 3001
          lifecycle:
            preStop:
              exec:
                command: ['nginx', '-s', 'quit']
          resources: {{ toYaml .Values.deployment.resources.web | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /robots.txt
              port: http
            initialDelaySeconds: 5
          livenessProbe:
            httpGet:
              path: /robots.txt
              port: http
            initialDelaySeconds: 5

      volumes:
        - name: public
        - name: sock-app
        - name: web-config
          configMap:
            name: {{ .Release.Name }}-web

      imagePullSecrets:
        - name: {{ .Release.Name }}-registry
