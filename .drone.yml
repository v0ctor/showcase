kind: pipeline
type: docker
name: default

trigger:
  branch:
    - master
  event:
    - push

steps:
  - name: prepare
    image: alpine
    environment:
      DRONE_DIR: .drone
      DOCKER_CA:
        from_secret: docker-ca
      DOCKER_CERT:
        from_secret: docker-cert
      DOCKER_KEY:
        from_secret: docker-key
      REGISTRY_HOST: registry.v0ctor.me
      REGISTRY_CONFIG:
        from_secret: registry
    commands:
      - mkdir -p $DRONE_DIR
      - >-
        echo -n $REGISTRY_HOST > $DRONE_DIR/registry &&
        echo -n 'victor' > $DRONE_DIR/namespace &&
        echo -n ${DRONE_COMMIT_SHA:0:8} > $DRONE_DIR/tag &&
        echo -n $([[ $DRONE_COMMIT_BRANCH = 'master' ]] && echo 'production' || echo 'staging') > $DRONE_DIR/environment
      - >-
        mkdir -p $DRONE_DIR/docker &&
        echo "$DOCKER_CA" > $DRONE_DIR/docker/ca.pem &&
        echo "$DOCKER_CERT" > $DRONE_DIR/docker/cert.pem &&
        echo "$DOCKER_KEY" > $DRONE_DIR/docker/key.pem &&
        echo "$REGISTRY_CONFIG" > $DRONE_DIR/docker/config.json

  - name: build
    image: docker:19.03.2
    environment:
      DOCKER_HOST: tcp://docker.v0ctor.me:2376
      DOCKER_TLS_VERIFY: '1'
    commands:
      - IMAGE="$(cat .drone/registry)/$(cat .drone/namespace)/$DRONE_REPO_NAME:$(cat .drone/tag)"
      - >-
        ln -s $(pwd)/.drone/docker ~/.docker &&
        docker build -t $IMAGE . &&
        docker push $IMAGE

  - name: pre-deploy
    image: lachlanevenson/k8s-helm:v2.14.3
    commands:
      - >-
        helm template chart
        --name $DRONE_REPO_NAME
        --namespace $(cat .drone/namespace)
        -f "chart/values.$(cat .drone/environment).yaml"
        --set-string images.app.tag=$(cat .drone/tag)
        --set-string registry.name=$(cat .drone/registry)
        --set-file registry.credentials=.drone/docker/config.json
        > spec.yaml

  - name: deploy
    image: lachlanevenson/k8s-kubectl:v1.15.3
    environment:
      KUBERNETES_CONFIG:
        from_secret: kubernetes
    commands:
      - >-
        mkdir -p ~/.kube &&
        echo "$KUBERNETES_CONFIG" > ~/.kube/config
      - >-
        kubectl config use-context $(cat .drone/environment) &&
        kubectl apply -f spec.yaml
